#!/usr/bin/env zsh
zparseopts f=force x=xorg h=help
if [[ -n $help ]]; then
  echo "usage: $0 [-f] [-x]"
  echo "	-f force"
  echo "	-x X dotfiles"
  return 1
fi

script=$0

#from:to  where "to" is "~/.${from}" by default
dotfiles=(
  gitconfig
  hgrc
  tmux.conf
  vimrc
  zsh
  zshenv
  zshrc
  misc/w3m:$HOME/.w3m
)

# append x11 specific stuff to dotfiles if xorg flag specified
if [[ -n $xorg ]]; then
  Xdotfiles=(
    X/Xdefaults
    X/i3
    X/fonts.conf
    X/xinitrc
    X/xbindkeysrc
    X/mplayer
    X/config/mpv
    X/config/tint2
    X/config/gtk-3.0
  )
  foreach f in $Xdotfiles
    f=(${(s/:/)f}) # split by ":"
    local src=$f[1]
    local dest=$f[2]
    # remove X/ and use $HOME/.$src as dest if no dest specified
    if [[ -z $dest ]]; then
      dest=$HOME/$f[1]:s/X\//./
    fi
    dotfiles+=$src:$dest
  end
fi

link_config() {
  src=$(dirname $script)/$1
  src=$src:a # absolute path
  if [[ ! -e $src ]]; then
    echo "no such file or directory: $src"
    return 1
  fi
  if [[ ! -z $2 ]]; then
    dest=$2
  else
    # $HOME/.$source if dest not defined
    dest=$HOME/.$1
  fi
  # make dest path if not exists
  if [[ ! -d $(dirname $dest) ]]; then
    mkdir -p $(dirname $dest)
  fi

  # delete if exists, ask if not forced
  if [[ -e $dest || -L $dest ]]; then
    if [[ -n $force ]]; then
      rm -rf $dest
    else
      rm -ri $dest
    fi
  fi
  # check again before linking
  if [[ ! -e $dest && ! -L $dest ]]; then
    echo linking $src to $dest
    ln -s $src $dest
  fi
}

foreach f in $dotfiles
  f=("${(s/:/)f}") # array split by ":"
  link_config $f[1] $f[2]
end
